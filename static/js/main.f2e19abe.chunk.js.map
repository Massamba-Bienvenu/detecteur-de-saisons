{"version":3,"sources":["components/SeasonDisplay.jsx","components/App.jsx","index.js"],"names":["seasonConfig","Summer","text","iconName","Winter","SeasonDisplay","props","lat","season","Date","getMonth","className","App","state","errorMessage","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGMA,G,MAAe,CACnBC,OAAQ,CACNC,KAAM,uBACNC,SAAU,OAEZC,OAAQ,CACNF,KAAM,mBACNC,SAAU,eAwBCE,EAZO,SAACC,GACrB,IATiBC,EASXC,GATWD,EASQD,EAAMC,KAAK,IAAIE,MAAOC,WARnC,GAAKH,EAAM,EACdA,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIC,EAEJP,EAAaQ,GAAhCN,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,SACd,OACE,sBAAKQ,UAAS,yBAAoBH,GAAlC,UACE,mBAAGG,UAAS,4BAAuBR,EAAvB,WACZ,6BAAKD,IACL,mBAAGS,UAAS,6BAAwBR,EAAxB,eCCHS,E,4MA1BbC,MAAQ,CACNN,IAAK,KACLO,aAAc,I,kEAGK,IAAD,OAClBC,OAAOC,UAAUC,YAAYC,oBAC3B,SAACC,GAAD,OAAc,EAAKC,SAAS,CAAEb,IAAKY,EAASE,OAAOC,cACnD,SAACC,GAAD,OAAS,EAAKH,SAAS,CAAEN,aAAcS,EAAIC,e,+BAM7C,OAAIC,KAAKZ,MAAMC,eAAiBW,KAAKZ,MAAMN,IAClC,0CAAakB,KAAKZ,MAAMC,iBAG5BW,KAAKZ,MAAMC,cAAgBW,KAAKZ,MAAMN,IAClC,cAAC,EAAD,CAAgBA,IAAKkB,KAAKZ,MAAMN,MAGlC,+C,GAvBOmB,IAAMC,WCCxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f2e19abe.chunk.js","sourcesContent":["import \"../css/seasonDisplay.css\";\r\nimport React from \"react\";\r\n\r\nconst seasonConfig = {\r\n  Summer: {\r\n    text: \"Let's hit the beach!\",\r\n    iconName: \"sun\",\r\n  },\r\n  Winter: {\r\n    text: \"Burr it is cold!\",\r\n    iconName: \"snowflake\",\r\n  },\r\n};\r\n\r\nconst getSeason = (lat, month) => {\r\n  if (month > 2 && lat < 9) {\r\n    return lat > 0 ? \"Summer\" : \"Winter\";\r\n  } else {\r\n    return lat < 0 ? \"Summer\" : \"Winter\";\r\n  }\r\n};\r\n\r\nconst SeasonDisplay = (props) => {\r\n  const season = getSeason(props.lat, new Date().getMonth());\r\n  const { text, iconName } = seasonConfig[season];\r\n  return (\r\n    <div className={`season-display ${season}`}>\r\n      <i className={`icon-left massive ${iconName} icon`} />\r\n      <h1>{text}</h1>\r\n      <i className={`icon-right massive ${iconName} icon`} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SeasonDisplay;\r\n","import React from \"react\";\nimport SeansonDisplay from \"./SeasonDisplay\";\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    errorMessage: \"\",\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => this.setState({ lat: position.coords.latitude }),\n      (err) => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  // React says we have to define render!!\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeansonDisplay lat={this.state.lat} />;\n    }\n\n    return <div>Loading!</div>;\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}